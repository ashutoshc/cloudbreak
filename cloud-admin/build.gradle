buildscript {
    repositories {
        maven { url 'http://repo.spring.io/libs-release' }
        mavenCentral()
        jcenter()
        maven { url "http://maven.sequenceiq.com/releases" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "com.smokejumperit.gradle.license:Gradle-License-Report:0.0.2"
        classpath "gradle.plugin.com.palantir:jacoco-coverage:0.4.0"
        classpath "gradle.plugin.com.github.jk1:gradle-license-report:0.3.4"
    }
}

plugins {
    id "com.palantir.jacoco-full-report" version "0.4.0"
    id "com.github.jk1.dependency-license-report" version "0.3.4"
}

apply plugin: 'org.springframework.boot'

bootRun {
    systemProperty 'spring.profiles.active', System.properties['spring.profiles.active']
    systemProperty 'spring.config.location', System.properties['spring.config.location']
    jvmArgs = ['-XX:MaxPermSize=1024m']
}

jar {
    baseName = 'cloudbreak'
}

dependencies {
    compile group: 'org.springframework.boot',      name: 'spring-boot-starter',                    version: springBootVersion
    compile group: 'org.springframework.boot',      name: 'spring-boot-starter-security',           version: springBootVersion
    compile group: 'org.springframework.boot',      name: 'spring-boot-starter-web',                version: springBootVersion
    compile group: 'de.codecentric',                name: 'spring-boot-admin-server',               version: '1.5.3'
    compile group: 'de.codecentric',                name: 'spring-boot-admin-server-ui',            version: '1.5.3'
    compile group: 'de.codecentric',                name: 'spring-boot-admin-server-ui-turbine',    version: '1.5.3'
    compile group: 'de.codecentric',                name: 'spring-boot-admin-server-ui-hystrix',    version: '1.5.3'
    compile group: 'de.codecentric',                name: 'spring-boot-admin-server-ui-activiti',   version: '1.5.3'
    compile group: 'de.codecentric',                name: 'spring-boot-admin-server-ui-login',      version: '1.5.3'

}

jacoco {
    toolVersion = "0.7.1.201405082137"
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}

test {
}

task buildInfo(type: BuildInfoTask) {
    destination = file("$buildDir")
    applicationPropertiesPath = "$buildDir"
    basename = jar.baseName
    buildVersion = version
}

springBoot {
    mainClass = 'com.sequenceiq.cloudbreak.CloudbreakApplication'
}

task execute(type: JavaExec) {
    if (project.hasProperty('mainClass')) {
        main = mainClass
        classpath = sourceSets.main.runtimeClasspath
    }
}

compileJava.dependsOn buildInfo

class BuildInfoTask extends DefaultTask {
    File destination = new File("build.info")
    String applicationPropertiesPath
    String basename
    String buildVersion

    @TaskAction
    def writeBuildInfo() {
        destination.mkdirs()
        File applicationDestination = new File(applicationPropertiesPath + "/resources/main")
        applicationDestination.mkdirs()
        new File(destination, "build.info").withWriter { out ->
            [
                    "ARTIFACT_BASENAME=" + basename,
                    "ARTIFACT_VERSION=" + buildVersion,
            ].each { out.println it }
        }
        new File(applicationDestination, "application.properties").withWriter { out ->
            [
                    "info.app.name=" + basename,
                    "info.app.version=" + buildVersion
            ].each { out.println it }
        }
    }
}